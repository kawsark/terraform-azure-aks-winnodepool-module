# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - scripts/venv/

before_script:
  - cd scripts/python/
  - python -V  # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

run:
  script:
    # - python setup.py bdist_wheel
    # an alternative approach is to install and run:
    # - pip install dist/*
    - curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add -
    - apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
    - apt-get update && apt-get install vault
    - echo $TFC_URL
    - echo $VAULT_ADDR
    # - echo $TFC_TOKEN
    # - echo $VAULT_TOKEN
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=gitlab-azure jwt=${CI_JOB_JWT})"
    - export TFC_TOKEN="$(vault read -field=token ${TFC_TOKEN_PATH})"
    - echo $TFC_TOKEN
    - echo $VAULT_TOKEN
    - pwd
    - ls
    - pip install -r pip-reqs.txt
    # run the command here
    - python main.py
  # artifacts:
    # paths:
      # - dist/*.whl